@model FullCalendar_MVC.RegisterViewModel

@{
    ViewBag.Title = "Membership Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br />
<br />
<br />
<br />
<div style="background-color:#0A3BA2; position:fixed; height:30px; width:100%">
    <img src="~/Images/spacer.gif" style="height:100%; width:23px" />
</div><br />

<section style="padding-top:30px;padding-bottom:10px;" id="contact-info">
        <div class="container">
            <div class="row">
                <div style="width:800px; text-align:right;background-color:#F1E872; border-radius:5px;font-weight:bold; padding-top:0px; padding-left:0px; font-size:13pt;" class="col-sm-5">
                    @using (Html.BeginForm("Create", "Member", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "Createform" }))
                    {
                        <div style="padding-bottom:10px" class="center">
                            <h4 class="modal-title" id="myModalLabel">ICOM @ViewBag.Title</h4>
                        </div>

                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary()

                        <div style="padding-right:20%;margin-bottom:0px" class="form-group">

                            @Html.LabelFor(model => model.FullName, new { @class = "control-label" }):
                            @Html.EditorFor(model => model.FullName, new { @class = "form-control" })

                        </div>
                        <div style="padding-right:20%;margin-bottom:0px" class="form-group">
                            @Html.LabelFor(model => model.Email, new { @class = "control-label" }):
                            @Html.EditorFor(model => model.Email, new { @class = "form-control" })
                        </div>
                        <div style="padding-right:20%;margin-bottom:0px" class="form-group">

                            @Html.LabelFor(model => model.DOB, new { @class = "control-label" }):
                            @*<input id="DOB" name="DOB" style="display:inline" class="form-control" type="date" />*@
                            @Html.EditorFor(model => model.DOB, new { @class = "form-control" })
                        </div>
                        <div style="padding-right:20%;margin-bottom:0px" class="form-group">

                            @Html.LabelFor(model => model.Phone, new { @class = "control-label" }):
                            @Html.EditorFor(model => model.Phone, new { @class = "form-control" })
                        </div>
                        <div style="padding-right:20%;margin-bottom:0px" class="form-group">

                            @Html.LabelFor(model => model.Address, new { @class = "control-label" }):
                            @Html.EditorFor(model => model.Address, new { @class = "form-control" })
                        </div>
                        <div style="padding-right:20%;margin-bottom:0px" class="form-group">

                            @Html.LabelFor(model => model.City, new { @class = "control-label" }):
                            @Html.EditorFor(model => model.City, new { @class = "form-control" })
                        </div>

                        <div style="padding-right:20%;margin-bottom:0px" class="form-group">

                            @Html.LabelFor(model => model.PostalCode, new { @class = "control-label" }):
                            @Html.EditorFor(model => model.PostalCode, new { @class = "form-control" })
                        </div>

                        <div style="padding-right:20%;margin-bottom:0px" class="form-group">

                            @Html.LabelFor(model => model.Country, new { @class = "control-label" }):
                            @Html.DropDownListFor(x => x.Country, new SelectList(Model.Countries, "abbreviation", "name"), new { @class = "form-control Country", @id = "Country" })
                        </div>

                        <div style="padding-right:20%;margin-bottom:0px" class="form-group">
                            @Html.LabelFor(model => model.State, new { @class = "control-label" }):
                            @Html.DropDownListFor(x => x.State, new List<SelectListItem>(), "--Select State--", new { @class = "form-control State", @id = "State" })
                        </div>
                            <br />
                            <div id="fields" style="width:90%;display:inline; text-align:right;">
                                <div style="margin-bottom:0px;margin-left:10%;padding-top:10px;padding-bottom:0px; width:90%; border-bottom:1px solid #0A3BA2">
                                    <h4 style="margin-bottom:0px;padding-bottom:0px;" class="modal-title center" id="myModalLabel">Add Family Members</h4>
                                </div>
                                @Html.Partial("AddToFamily", new FullCalendar_MVC.FamilyViewModel { IncIndex = 0, FamilyFullName = "", FamilyDOB = DateTime.Now, IsPrimary = false }, new ViewDataDictionary() { { "intItemNum", 1 } })


                            </div>
                                    <button type="button" style="width:50px; font-weight:bold; display:inline" id="btnAddFamily" name="btnAddFamily" class="btn btn-success btn-block">+ Add</button>
                                    <br />
                                    <br />
                                    <br />
                                    <br />
                            <input type="hidden" name="FamilyMembers" value="" id="FamilyMembers" />
                            <p style="text-align:right">
                                <button type="submit" style="width:150px; font-weight:bold; display:inline" class="btn btn-success btn-block"><i class="fa fa-save"></i> Submit</button>
                            </p>


                    }
                </div>
            </div>

        </div> 
    <input id="txtUserRow" type="text" value="1" hidden="hidden">

</section>


@*<div id="popupEventForm" name="popupEventForm" title="Add new event" class="modal hide" style="display: none;">
    <table>
        <tr>
            <td style="padding-right:30px">
                <input type="hidden" id="eventID">
                <label>Full Name</label>
                <input type="text" id="FamilyFullName" name="FamilyFullName" placeholder="Full Name here"><br />
                <label>Date Of Birth</label>
                <input id="FamilyDOB" name="FamilyDOB" class="form-control" placeholder="Date Of Birth here" type="date" /><br />
            </td>
        </tr>
    </table>
</div>*@


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/bootstrap")
}
<script>

        $(document).ready(function () {
            $(".nav li").removeClass("active");//this will remove the active class from
            $('#lMember').addClass('active');
            $('#login-overlay').hide();

        });

        $('#Country').change(function () {
            iCountryID = $(this).val();
            if (iCountryID!="")
            {
                GetStates(iCountryID);
         
            }
        });

        function GetStates(CountryID){

            var allStates = @Html.Raw(Json.Encode(@Model.States));
            var fndState=$.grep(allStates, function(element){ return element.Country == CountryID; })

            if (fndState.length>0)
            {
                var company = "<select name='State' id='State' class='form-control State'>";
                company = company + '<option value="">--Select State--</option>';
                for (var i = 0; i < fndState.length; i++) {
                    company = company + '<option value=' + fndState[i].Abbr + '>' + fndState[i].Name + '</option>';
                }
                company = company + '</select>';
                $('#State').html(company);
                //$('#State').rules("add", {
                //    required: true, messages: { required: "Company Name is required." }
                //});
            }
        }

        function lastIncDate() {
            if ($.trim($(".FamilyFullName").last().val()).length > 0) {
                return true;
            } else {
                return false;
            }
        }
        var $fields = $('#fields');

        $('#btnAddFamily').click(function () {

              
            var anyMember=$(".FamilyFullName").val();
            if (anyMember!=null)
            {
                var rowCount= $('#txtUserRow');
          
                intCurrRow = parseInt(rowCount.val());
                intNewRow =intCurrRow + 1;
                var UserInfo = { id: intNewRow };
                var strDivRow = "#divUserRow" + intNewRow;
                if (intNewRow < 2) {
                    $.ajax({
                        url: "../Member/AddToFamily",
                        data: UserInfo,
                        cache: false,
                        success: function (html) {
                            $fields.append(html);
                            $('#txtUserRow').val(intNewRow);
                        }
                    });
                } else {
                    if (lastIncDate()) {
                        $.ajax({
                            url: "../Member/AddToFamily",
                            data: UserInfo,
                            cache: false,
                            success: function (html) {
                                $(".divUserRow").last().after(html);

                                $('#txtUserRow').val(intNewRow);
                            }
                        });
                    }
                }            
            }
            else{
                var UserInfo = { id: intNewRow };
                $.ajax({
                    url: "../Member/AddToFamily",
                    data: UserInfo,
                    cache: false,
                    success: function (html) {
                        $fields.append(html);
                        $('#txtUserRow').val(1);
                    }
                });

            }



            return false;

        });

        function RemoveButton(obj, e) {
            var strDivRow = "#divUserRow" + e;
            var strDelRow = "#divUserRow" + e;

            var fullName = $(strDelRow).find('.FamilyFullName');
            if (fullName != null) {

                if (confirm("Are you sure you want to remove this family member: " + fullName.val() + "?")) {
                    var intCurrRow = (parseInt($('#txtUserRow').val()) - 1);
                    if ((intCurrRow + 1) == e) {
                        $('#txtUserRow').val(intCurrRow);
                    }

                    $(strDelRow).remove();
                };
            };


        }

        function ShowEventPopup() {
            ClearPopupFormValues();
            $('#login-overlay').dialog({
                resizable: false,
                height: "auto",
                width: 600,
                modal: true,
                buttons: {
                    "Add Member": AddFamily,
                    Cancel: function () {
                        $(this).dialog("close");
                    }
                },
                close: function () {
                    $(this).dialog("close")
                }
            });
            $('.FamilyFullName').focus();
        }

        function AddFamily()
        {
            $('#FamilyMemberList').val($('#FamilyMemberList').val() + $('.FamilyFullName').val() + ' (DOB: ' + $('#FamilyDOB').val() + ')' + ';\n');
            $('#FamilyMembers').val($('#FamilyMembers').val() + $('.FamilyFullName').val() + ';' + $('#FamilyDOB').val() + '|');
            $("#login-overlay").dialog("close")

        }
     //   $('#btnAddFamily').click(function () {
      //     ShowEventPopup();
      //  });

    //    $('#btnCancelAdd').click(function () {
    //        $('#login-overlay').dialog("close");
    //    });

        $('#btnSaveFamily').click(function () {
            if (!$('.FamilyFullName').val() || !$('#FamilyDOB').val())
            { alert("Please enter both Full Name and Date Of Birth"); }
            else
            { AddFamily(); }

        });

    $('#Address').keydown, $('#Address').keyup, $('#Address').keypress,
            $('#PostalCode').keydown, $('#PostalCode').keyup, $('#PostalCode').keypress,
            $('#City').keydown, $('#City').keyup, $('#City').keypress,
$('#FullName').keydown, $('#FullName').keyup, $('#FullName').keypress,
        $('.FamilyFullName').keydown, $('.FamilyFullName').keypress, $('.FamilyFullName').keyup(
            function() {
            $(this).val($(this).val().replace('\\', '').replace('/', '').replace('(', '').replace(';', '').replace(':', '').replace('|', '').replace('"', '').replace('\'', '').replace(')', ''));

        });

            function ClearPopupFormValues() {
                $('.FamilyFullName').val("");
                $('#FamilyDOB').val("");
            }

</script>
